    /*
        인라인함수
         - kotlin 코드가 java로 변경될 때 함수를 호출하는 코드를 함수내에 구현한 코드로
           변경하는 함수이다.
         - 함수 호출 방식은 전체 코드양이 줄어들어 메모리를 적게 쓴다는 장점이 잇지만
           호출 시 코드 흐름이 이동하고 다시 돌아와야 하기 때문에 작업량이 늘어난다.
         - 인라인 함수는 전체 코드양이 늘어 메모리를 더 많이 사용하지만 코드 흐름이
           이동 없이 수행되기 때문에 작업량이 늘어나지 않는다.
         - 간단 요약 : 각각의 함수를 부르면 해당 함수안에 코드들이 한번에 복사되어 main 으로 오고
           여러번의 이동 없이 한번에 출력
     */

fun main() {
    testFunc1()
    testFunc1()

    testFunc2() // 메모리는 더 많이 사용하지만 갔다가 돌아오는 작업을 하지 않기에
    testFunc2() // 미세한 성능차이가 난다. 게임 같이 성능이 중요할 경우 사용

}
    fun testFunc1(){
        println("-------------------------------")
        println("안나라수마나라")
        println("--------------------------------")
    }

    inline fun testFunc2(){

        println("-------------------------------")
        println("tsetFunction1")
        println("-------------------------------")
    }