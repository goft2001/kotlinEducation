/*
    For 문
    - 배열과 같이 값들을 관리하는 요소들을 이용해 코드를 반복하는 반복문
    - 관리하는 값의 개수 만큼 반복한다.
    - for(변수 in 배열){
            코드
      }
 */

fun main() {
    val a1= 1..10

    for(item in a1){
        println("a1: $item")
    }
    println("----------------------------")
    //2단계씩 출력할 때
    val a2 = 1..10 step 2
    for(item in a2){
        println("a2:$item")
    }
    println("----------------------------")
    //역순으로 출력할 때
    val a3 = 10..1
    for(item in a3){
        println("a3  : $item")
    } // 10부터 시작해서 증가해서 1에 도착했는지 검사하며 증가하지만 10부터 1로 감소하는 코드로 만들었기에 값을 관리하지 못함

    val a4 = 10 downTo 1 step 2 // .. 이 아닌 downTo 사용 step 적용 가능
    for(item in a4){
        println("a4  : $item")
    }

    println("----------------------------")

    /*
         while 문
          - 주어진 조건이 만족할 경우 반복되는 반복문
          - 조건식이 상단에 있으므로 조건식이 거짓이면 단 한번도 수행되지 않는다.
          - 조건식을 시행했을 시 true라면 실행, false 라면 반복을 중단
          - 주의할 점 : 조건식이 영원히 거짓이 안된다면 무한루프에 빠짐

          - while(조건식){
                코드
           }
     */

    var a5 = 0
    // var a5 = 100
    while (a5<10){
        println("a5 : $a5")
        a5++
    }

  /*
        do while 문
        - 주어진 조건이 만족할 경우 반복되는 반복문
        - 조건식이 하단에 있으므로 조건식이 거짓이라도 단 한번은 수행된다.
        - do{
                코드
            }while(조건식)
   */

  var a6 = 100 // 조건문과 달리 거짓이나 한번은 실행됨
    do {
        println("a6 : $a6"  )
        a6++
    }while (a6<10)
}